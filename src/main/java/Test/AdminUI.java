/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Test;

import java.awt.HeadlessException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author timgl
 */
public class AdminUI extends javax.swing.JFrame {
    
    InsuranceCompany company;
    Login login;
    ArrayList<String> cities;
    User user;
    ArrayList<String> userList;
    ArrayList<String> policyIdList;
    
    /**
     * Creates new form adminLogin
     * @param company
     * @param login
     * @param cities
     */
    public AdminUI(InsuranceCompany company, Login login, ArrayList<String> cities) {
        
        this.company = company;
        this.login = login;
        this.cities = cities;
        
        initComponents();
        onLogin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePopMenu = new javax.swing.JPopupMenu();
        Delete = new javax.swing.JMenuItem();
        Update = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        UserListTab = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        SortName = new javax.swing.JCheckBox();
        sortPremium = new javax.swing.JCheckBox();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        EditUserTab = new javax.swing.JPanel();
        idField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        streetNumLabel = new javax.swing.JLabel();
        streetNumField = new javax.swing.JTextField();
        streetLabel = new javax.swing.JLabel();
        streetField = new javax.swing.JTextField();
        suburbLabel = new javax.swing.JLabel();
        subField = new javax.swing.JTextField();
        cityLabel = new javax.swing.JLabel();
        CityChoiceBox = new javax.swing.JComboBox<>();
        cityOptionCheck = new javax.swing.JCheckBox();
        saveButtonEdit = new javax.swing.JButton();
        cityChoieField = new javax.swing.JTextField();
        clientText = new javax.swing.JLabel();
        selectUser1 = new javax.swing.JComboBox<>();
        deleteEdit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PolicyInfoTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        policyListTable = new javax.swing.JTable();
        deleteButtonV1 = new javax.swing.JButton();
        updateButtonV1 = new javax.swing.JButton();
        userChoicev1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        FilterPolicies = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableV2 = new javax.swing.JTable();
        modelFieldV2 = new javax.swing.JTextField();
        modelFilterLabel = new javax.swing.JLabel();
        dateFieldV2 = new javax.swing.JTextField();
        dateFilterLabel = new javax.swing.JLabel();
        dateButtV2 = new javax.swing.JButton();
        sortV2 = new javax.swing.JCheckBox();
        userListV2 = new javax.swing.JComboBox<>();
        clientLabel4 = new javax.swing.JLabel();
        jPanel1V3 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        reportByCityLabel = new javax.swing.JLabel();
        generate1 = new javax.swing.JButton();
        reportByCityLabel1 = new javax.swing.JLabel();
        generate2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        reportGenerating = new javax.swing.JTextArea();
        reportLabel1 = new javax.swing.JLabel();
        reportClearBut = new javax.swing.JButton();
        FindPolicyTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAreaPolicy = new javax.swing.JTextArea();
        ClearTabV5 = new javax.swing.JButton();
        clientLabel1 = new javax.swing.JLabel();
        idV5 = new javax.swing.JComboBox<>();
        userListV5 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        AddPolicyTab = new javax.swing.JPanel();
        thirdPartyChoiceV4 = new javax.swing.JRadioButton();
        CompreV4 = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        HolderV4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        idV4 = new javax.swing.JTextField();
        ComboV4 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        ModelV4 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        YearV4 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        priceV4 = new javax.swing.JTextField();
        expiryLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        yearV4 = new javax.swing.JTextField();
        monthv4 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dayv4 = new javax.swing.JTextField();
        commentAgeLabel = new javax.swing.JLabel();
        commentV4 = new javax.swing.JTextField();
        levelLabel = new javax.swing.JLabel();
        levelTextv4 = new javax.swing.JTextField();
        ClearV4 = new javax.swing.JButton();
        AddV4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        claimV4 = new javax.swing.JTextField();
        clientLabel = new javax.swing.JLabel();
        userListV4 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        logoutMenu = new javax.swing.JMenu();

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        tablePopMenu.add(Delete);

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        tablePopMenu.add(Update);

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        UserTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", "Name", "Address", "Premium Payment"
            }
        ));
        jScrollPane5.setViewportView(UserTable);

        SortName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SortName.setText("Sort By Name");
        SortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortNameActionPerformed(evt);
            }
        });

        sortPremium.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sortPremium.setText("Sort by Premium");
        sortPremium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortPremiumActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Sort Users");

        javax.swing.GroupLayout UserListTabLayout = new javax.swing.GroupLayout(UserListTab);
        UserListTab.setLayout(UserListTabLayout);
        UserListTabLayout.setHorizontalGroup(
            UserListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserListTabLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(UserListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserListTabLayout.createSequentialGroup()
                        .addGroup(UserListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(UserListTabLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(SortName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 490, Short.MAX_VALUE)
                        .addComponent(sortPremium)
                        .addGap(435, 435, 435))))
            .addGroup(UserListTabLayout.createSequentialGroup()
                .addGap(593, 593, 593)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        UserListTabLayout.setVerticalGroup(
            UserListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserListTabLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(22, 22, 22)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserListTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SortName)
                    .addComponent(sortPremium))
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("User List", UserListTab);

        idField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });

        idLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idLabel.setText("User ID");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Name");

        nameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordLabel.setText("Password");

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addressLabel.setText("Address ");

        streetNumLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetNumLabel.setText("Street Number");

        streetNumField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetNumField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNumFieldActionPerformed(evt);
            }
        });

        streetLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetLabel.setText("Street");

        streetField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        streetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetFieldActionPerformed(evt);
            }
        });

        suburbLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        suburbLabel.setText("Suburb");

        subField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityLabel.setText("City");

        CityChoiceBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CityChoiceBox.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CityChoiceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityChoiceBoxActionPerformed(evt);
            }
        });

        cityOptionCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityOptionCheck.setText("New City");
        cityOptionCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityOptionCheckActionPerformed(evt);
            }
        });

        saveButtonEdit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        saveButtonEdit.setForeground(new java.awt.Color(255, 0, 0));
        saveButtonEdit.setText("SAVE");
        saveButtonEdit.setAlignmentY(0.0F);
        saveButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonEditActionPerformed(evt);
            }
        });

        cityChoieField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        clientText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientText.setText("Select User ID");

        selectUser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectUser1.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectUser1ActionPerformed(evt);
            }
        });
        selectUser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                selectUser1PropertyChange(evt);
            }
        });

        deleteEdit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteEdit.setForeground(new java.awt.Color(255, 102, 0));
        deleteEdit.setText("DELETE");
        deleteEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEditActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel6.setText("EDIT USER");

        javax.swing.GroupLayout EditUserTabLayout = new javax.swing.GroupLayout(EditUserTab);
        EditUserTab.setLayout(EditUserTabLayout);
        EditUserTabLayout.setHorizontalGroup(
            EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditUserTabLayout.createSequentialGroup()
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EditUserTabLayout.createSequentialGroup()
                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(clientText, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(63, 63, 63)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditUserTabLayout.createSequentialGroup()
                        .addGap(497, 497, 497)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditUserTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(deleteEdit)
                        .addGap(532, 532, 532))
                    .addGroup(EditUserTabLayout.createSequentialGroup()
                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(EditUserTabLayout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditUserTabLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordLabel)
                                .addGap(59, 59, 59)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(410, 410, 410)
                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressLabel)
                            .addGroup(EditUserTabLayout.createSequentialGroup()
                                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cityLabel)
                                    .addComponent(streetNumLabel)
                                    .addComponent(streetLabel)
                                    .addComponent(suburbLabel))
                                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EditUserTabLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(streetNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(subField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(EditUserTabLayout.createSequentialGroup()
                                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(EditUserTabLayout.createSequentialGroup()
                                                .addGap(205, 205, 205)
                                                .addComponent(cityChoieField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(EditUserTabLayout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(CityChoiceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cityOptionCheck)))))))
                .addGap(43, 187, Short.MAX_VALUE))
        );
        EditUserTabLayout.setVerticalGroup(
            EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditUserTabLayout.createSequentialGroup()
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditUserTabLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientText)
                            .addComponent(addressLabel))
                        .addGap(18, 18, 18)
                        .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idLabel)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(streetNumLabel)
                            .addComponent(streetNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EditUserTabLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6)))
                .addGap(21, 21, 21)
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetLabel))
                .addGap(18, 18, 18)
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(passwordLabel)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(subField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(suburbLabel)))
                .addGap(19, 19, 19)
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityChoieField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityChoiceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel)
                    .addComponent(cityOptionCheck))
                .addGap(116, 116, 116)
                .addGroup(EditUserTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteEdit)
                    .addComponent(saveButtonEdit))
                .addContainerGap(399, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit User", EditUserTab);

        policyListTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        policyListTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        policyListTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Policy ID", "Policy Name", "Model", "ManuYear", "Car Type", "Price", "NoClaims", "Expiry Date", "Driver Age", "Level", "Comment", "Premium Payment"
            }
        ));
        policyListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        policyListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                policyListTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(policyListTable);

        deleteButtonV1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButtonV1.setForeground(new java.awt.Color(255, 51, 51));
        deleteButtonV1.setText("DELETE");
        deleteButtonV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonV1ActionPerformed(evt);
            }
        });

        updateButtonV1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateButtonV1.setForeground(new java.awt.Color(255, 51, 51));
        updateButtonV1.setText("UPDATE");
        updateButtonV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonV1ActionPerformed(evt);
            }
        });

        userChoicev1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userChoicev1.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userChoicev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userChoicev1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Select a user ID ");

        javax.swing.GroupLayout PolicyInfoTabLayout = new javax.swing.GroupLayout(PolicyInfoTab);
        PolicyInfoTab.setLayout(PolicyInfoTabLayout);
        PolicyInfoTabLayout.setHorizontalGroup(
            PolicyInfoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1416, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PolicyInfoTabLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(userChoicev1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButtonV1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133)
                .addComponent(deleteButtonV1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );
        PolicyInfoTabLayout.setVerticalGroup(
            PolicyInfoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyInfoTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(PolicyInfoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userChoicev1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButtonV1)
                    .addComponent(deleteButtonV1))
                .addContainerGap(376, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Policy Info", PolicyInfoTab);

        TableV2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        TableV2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        TableV2.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Policy ID", "Policy Name", "Model", "ManuYear", "Car Type", "Price", "NoClaims", "Expiry Date", "Driver Age", "Level", "Comment", "Premium Payment"
            }
        ));
        jScrollPane3.setViewportView(TableV2);

        modelFieldV2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFieldV2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                modelFieldV2KeyReleased(evt);
            }
        });

        modelFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modelFilterLabel.setText("Car Model");

        dateFieldV2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dateFilterLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateFilterLabel.setText("Expiry Date");

        dateButtV2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateButtV2.setForeground(new java.awt.Color(255, 51, 51));
        dateButtV2.setText("Filter By Date");
        dateButtV2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateButtV2ActionPerformed(evt);
            }
        });

        sortV2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sortV2.setText("Sort By Name");
        sortV2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortV2ActionPerformed(evt);
            }
        });

        userListV2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userListV2.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userListV2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userListV2ActionPerformed(evt);
            }
        });

        clientLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        clientLabel4.setText("Select User ID");

        javax.swing.GroupLayout FilterPoliciesLayout = new javax.swing.GroupLayout(FilterPolicies);
        FilterPolicies.setLayout(FilterPoliciesLayout);
        FilterPoliciesLayout.setHorizontalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1408, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateFilterLabel)
                    .addComponent(modelFilterLabel)
                    .addComponent(clientLabel4))
                .addGap(18, 18, 18)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userListV2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelFieldV2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFieldV2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(sortV2))
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(dateButtV2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FilterPoliciesLayout.setVerticalGroup(
            FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPoliciesLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientLabel4)
                            .addComponent(userListV2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelFieldV2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelFilterLabel)))
                    .addGroup(FilterPoliciesLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(sortV2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterPoliciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateFieldV2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateFilterLabel))
                    .addComponent(dateButtV2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(293, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Filter Policies", FilterPolicies);

        reportByCityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reportByCityLabel.setText("Reporting - Total Payments By City");

        generate1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        generate1.setForeground(new java.awt.Color(255, 51, 51));
        generate1.setText("GENERATE");
        generate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate1ActionPerformed(evt);
            }
        });

        reportByCityLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reportByCityLabel1.setText("Reporting - Total Payments By Car Model");

        generate2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        generate2.setForeground(new java.awt.Color(255, 51, 51));
        generate2.setText("GENERATE");
        generate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate2ActionPerformed(evt);
            }
        });

        reportGenerating.setEditable(false);
        reportGenerating.setBackground(new java.awt.Color(239, 255, 255));
        reportGenerating.setColumns(20);
        reportGenerating.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        reportGenerating.setRows(5);
        reportGenerating.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 255, 255), new java.awt.Color(0, 102, 153), new java.awt.Color(0, 204, 204)));
        jScrollPane4.setViewportView(reportGenerating);

        reportLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        reportLabel1.setText("Generate Reports");

        reportClearBut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reportClearBut.setForeground(new java.awt.Color(255, 51, 102));
        reportClearBut.setText("CLEAR");
        reportClearBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportClearButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1V3Layout = new javax.swing.GroupLayout(jPanel1V3);
        jPanel1V3.setLayout(jPanel1V3Layout);
        jPanel1V3Layout.setHorizontalGroup(
            jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1V3Layout.createSequentialGroup()
                .addGroup(jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1V3Layout.createSequentialGroup()
                        .addGroup(jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1V3Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1V3Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(reportLabel1)
                                .addGap(45, 45, 45)
                                .addComponent(reportByCityLabel)
                                .addGap(18, 18, 18)
                                .addComponent(generate1)
                                .addGap(165, 165, 165)
                                .addComponent(reportByCityLabel1)))
                        .addGroup(jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1V3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(generate2))
                            .addGroup(jPanel1V3Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(reportClearBut))))
                    .addGroup(jPanel1V3Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jPanel1V3Layout.setVerticalGroup(
            jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1V3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1V3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportLabel1)
                    .addComponent(reportByCityLabel)
                    .addComponent(generate1)
                    .addComponent(reportByCityLabel1)
                    .addComponent(generate2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(reportClearBut)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Generate Report", jPanel1V3);

        userAreaPolicy.setEditable(false);
        userAreaPolicy.setBackground(new java.awt.Color(255, 153, 255));
        userAreaPolicy.setColumns(20);
        userAreaPolicy.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        userAreaPolicy.setRows(5);
        userAreaPolicy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(102, 255, 255), new java.awt.Color(0, 102, 153), new java.awt.Color(0, 204, 204)));
        jScrollPane1.setViewportView(userAreaPolicy);

        ClearTabV5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ClearTabV5.setForeground(new java.awt.Color(255, 0, 0));
        ClearTabV5.setText("CLEAR");
        ClearTabV5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearTabV5ActionPerformed(evt);
            }
        });

        clientLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientLabel1.setText("Select User ID");

        idV5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idV5.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        idV5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idV5ActionPerformed(evt);
            }
        });
        idV5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                idV5PropertyChange(evt);
            }
        });

        userListV5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userListV5.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userListV5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userListV5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Policy ID");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel8.setText("FIND A USER POLICY");

        javax.swing.GroupLayout FindPolicyTabLayout = new javax.swing.GroupLayout(FindPolicyTab);
        FindPolicyTab.setLayout(FindPolicyTabLayout);
        FindPolicyTabLayout.setHorizontalGroup(
            FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyTabLayout.createSequentialGroup()
                .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel8))
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(clientLabel1))
                        .addGap(33, 33, 33)
                        .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idV5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userListV5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(ClearTabV5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        FindPolicyTabLayout.setVerticalGroup(
            FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindPolicyTabLayout.createSequentialGroup()
                .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userListV5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientLabel1))
                        .addGap(25, 25, 25)
                        .addGroup(FindPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idV5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClearTabV5))
                    .addGroup(FindPolicyTabLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 278, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find a Policy", FindPolicyTab);

        thirdPartyChoiceV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        thirdPartyChoiceV4.setText("Third Party Policy");
        thirdPartyChoiceV4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thirdPartyChoiceV4StateChanged(evt);
            }
        });
        thirdPartyChoiceV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdPartyChoiceV4ActionPerformed(evt);
            }
        });

        CompreV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CompreV4.setText("Comprehensive Policy");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Policy Holder Name");

        HolderV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Policy ID Number");
        jLabel11.setToolTipText("");

        idV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ComboV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboV4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Car Type");

        ModelV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Model");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Build Year");

        YearV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Price");

        priceV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        expiryLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        expiryLabel.setText(" Expiry Date");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Year");
        jLabel18.setToolTipText("");

        yearV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        monthv4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Month");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Day");
        jLabel20.setToolTipText("");

        dayv4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        commentAgeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        commentAgeLabel.setText("Comment");
        commentAgeLabel.setToolTipText("");

        commentV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        levelLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        levelLabel.setText("Level");
        levelLabel.setToolTipText("");

        levelTextv4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ClearV4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClearV4.setForeground(new java.awt.Color(255, 51, 102));
        ClearV4.setText("CLEAR");
        ClearV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearV4ActionPerformed(evt);
            }
        });

        AddV4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddV4.setForeground(new java.awt.Color(255, 51, 102));
        AddV4.setText("ADD");
        AddV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddV4ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Number of Claims");
        jLabel12.setToolTipText("");

        claimV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        claimV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claimV4ActionPerformed(evt);
            }
        });

        clientLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clientLabel.setText("Select User ID");

        userListV4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userListV4.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userListV4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userListV4ActionPerformed(evt);
            }
        });
        userListV4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                userListV4PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout AddPolicyTabLayout = new javax.swing.GroupLayout(AddPolicyTab);
        AddPolicyTab.setLayout(AddPolicyTabLayout);
        AddPolicyTabLayout.setHorizontalGroup(
            AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPolicyTabLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddPolicyTabLayout.createSequentialGroup()
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddPolicyTabLayout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddPolicyTabLayout.createSequentialGroup()
                                .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HolderV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(AddPolicyTabLayout.createSequentialGroup()
                                    .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel16))
                                    .addGap(28, 28, 28)
                                    .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ComboV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ModelV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(YearV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(claimV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(levelTextv4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(priceV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(commentV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(AddPolicyTabLayout.createSequentialGroup()
                                    .addGap(38, 38, 38)
                                    .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(commentAgeLabel)
                                        .addComponent(levelLabel)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyTabLayout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel18)
                                        .addComponent(expiryLabel))
                                    .addGap(38, 38, 38)
                                    .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(yearV4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(monthv4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dayv4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(475, 475, 475))
                    .addGroup(AddPolicyTabLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(clientLabel)
                        .addGap(18, 18, 18)
                        .addComponent(userListV4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                        .addComponent(thirdPartyChoiceV4)
                        .addGap(95, 95, 95)
                        .addComponent(CompreV4)
                        .addGap(476, 476, 476))))
            .addGroup(AddPolicyTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddV4)
                .addGap(34, 34, 34)
                .addComponent(ClearV4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        AddPolicyTabLayout.setVerticalGroup(
            AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPolicyTabLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientLabel)
                    .addComponent(userListV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompreV4)
                    .addComponent(thirdPartyChoiceV4))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddPolicyTabLayout.createSequentialGroup()
                        .addGap(546, 546, 546)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddV4)
                            .addComponent(ClearV4)))
                    .addGroup(AddPolicyTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(HolderV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(20, 20, 20)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(claimV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(ComboV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(ModelV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(YearV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(commentAgeLabel)
                            .addComponent(commentV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levelLabel)
                            .addComponent(levelTextv4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(expiryLabel)
                        .addGap(18, 18, 18)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearV4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthv4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddPolicyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayv4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))))
                .addGap(205, 205, 205))
        );

        jTabbedPane1.addTab("Add Policy", AddPolicyTab);

        jMenuBar1.setToolTipText("Tim Glasgow 7409072");
        jMenuBar1.setName("Tim Glasgow 7409072"); // NOI18N

        logoutMenu.setText("Logout");
        logoutMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        logoutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    

    private void onLogin() // load some inital settings on login
{
        thirdPartyChoiceV4.setSelected(true);
        levelLabel.setVisible(false);
        levelTextv4.setVisible(false);
        commentAgeLabel.setText("Comments");
        
        ButtonGroup plans = new ButtonGroup();
        plans.add(thirdPartyChoiceV4);
        plans.add(CompreV4);
        
        ButtonGroup uSort = new ButtonGroup();
        uSort.add(SortName);
        uSort.add(sortPremium);
    }
    
    private void clearUser()
    {
        idField.setText(""); // implicit conversion by concat empty string
        nameField.setText("");
        passwordField.setText("");
        streetNumField.setText("");
        streetField.setText("");
        subField.setText("");
        cityChoieField.setText("");
    }
    
    private void setUser(User user)
    {
        this.user = user;
    }
    private void setUserlist(ArrayList<String> userList)
    {
        this.userList = userList;
    }
    
    private void clearPolicyForm() // method to clear entered policy details from Add Policy form
    {
        HolderV4.setText("");
        idV4.setText("");
        ModelV4.setText("");
        YearV4.setText("");
        priceV4.setText("");
        claimV4.setText("");
        yearV4.setText("");
        monthv4.setText("");
        dayv4.setText("");
        commentV4.setText("");
        levelTextv4.setText("");
    }
    
    private void updateUserList()
    {
        setUserlist(company.getUsers().values().stream()
                .map(x -> x.getUserID()+"")
                .collect(Collectors.toCollection(ArrayList::new)));
        
    }
    
     public void fillTable()
    {
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        policyListTable.setModel(model);
        for (InsurancePolicy policy : user.getPolicies(user.getName(), user.getPassword()).values())
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComment();
            }
            row[11] = String.format("$%.2f", policy.calcPremium(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
    }
     
    private void fillTable1()
    {
        ArrayList<InsurancePolicy> policiesCopy = new ArrayList<>();
        
        if(user==null)
        {
            policiesCopy = InsurancePolicy.shallowCopy(login.insuranceCompany.allPolicies());
        }
        else
        {
            policiesCopy = user.shallowCopyPolicies();
        }
        try
        {
            if (!modelFieldV2.getText().isEmpty())
            {
                policiesCopy = InsurancePolicy.filterByCarModel(policiesCopy, modelFieldV2.getText());
            }
            if (!dateFieldV2.getText().isEmpty())
            {
                String [] fields = dateFieldV2.getText().split("/");
                int year = Integer.parseInt(fields[0]);
                int month = Integer.parseInt(fields[1]);
                int day = Integer.parseInt(fields[2]);
                MyDate date = new MyDate(year, month, day);
                policiesCopy = InsurancePolicy.filterByExpiryDate(policiesCopy, date);
            }
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid Input!\nCheck inputs fields.");
            if (!dateFieldV2.getText().isEmpty())
            {
                dateFieldV2.setText("");
            }
        }
        
        if (sortV2.isSelected()) // check if sort by name
        {
            Collections.sort(policiesCopy);
        }
        // fill the table with results from above filters (if any)
        
        String [] header = {"Policy ID", "Holder Name", "Car Model", "Build Year", "Type", "Price", "Claims", "Expiry Date", "Driver Age", "Cover Level", "Comments", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        TableV2.setModel(model);
        for (InsurancePolicy policy : policiesCopy)
        {
            String[] row = new String[12];
            row[0] = policy.getId()+"";
            row[1] = policy.getPolicyHolderName();
            row[2] = policy.getCar().getModel();
            row[3] = policy.getCar().getManufacturingYear()+"";
            row[4] = policy.getCar().getType().toString();
            row[5] = String.format("$%.2f", policy.getCar().getPrice());
            row[6] = policy.getNumberOfClaims()+"";
            row[7] = policy.getExpiryDate().toString();
            if (policy instanceof ComprehensivePolicy)
            {
                row[8] = ((ComprehensivePolicy)policy).getDriverAge()+"";
                row[9] = ((ComprehensivePolicy)policy).getLevel()+"";
                row[10] = "NA";
            }
            else
            {
                row[8] = "NA";
                row[9] = "NA";
                row[10] = ((ThirdPartyPolicy)policy).getComment();
            }
            row[11] = String.format("$%.2f", policy.calcPremium(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }        
    }
    
    private void fillUserTable() {   
        
        ArrayList<User> usersCopy = new ArrayList<User>();
        for (final User user : this.company.getUsers().values()) {
            usersCopy.add(user);
        }
        
        if (SortName.isSelected()) // check if sort by name
        {
            Collections.sort(usersCopy);
        }
        
        if (sortPremium.isSelected()) // check if sort by premium
        {
            Collections.sort(usersCopy, new InsuranceCompany.UserComparator()); // use comparator class from class Insurance Company
        }
        // fill the table with results from above filters (if any)
        
        String [] header = {"User ID", "User Name", "Address", "Premium"};
        DefaultTableModel model = new DefaultTableModel(header,0);
        UserTable.setModel(model);
        for (User user : usersCopy)
        {
            String[] row = new String[4];
            row[0] = user.getUserID()+"";
            row[1] = user.getName();
            row[2] = user.getAddress().toString();

            row[3] = String.format("$%.2f", user.calcTotalPremium(login.insuranceCompany.getFlatRate()));
            model.addRow(row); // adds the row to the table
        }
        
    }
    
    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        // TODO add your handling code here:
        login.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_logoutMenuMouseClicked

    private void logoutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutMenuActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        int index = policyListTable.getSelectedRow();
        if (index>=0)
        {

            user.getPolicies(user.getName(), user.getPassword()).remove(Integer.parseInt(policyListTable.getValueAt(index, 0).toString()));
            fillTable();
        }

    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

        int index = policyListTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUIAdmin updateUI_1 = new UpdateUIAdmin(user.getPolicies(user.getName(), user.getPassword()).get(Integer.parseInt(policyListTable.getValueAt(index, 0).toString())), this);
            updateUI_1.setVisible(true);
        }

    }//GEN-LAST:event_UpdateActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        clearPolicyForm();
        clearUser();
        updateUserList();
        setUser(null);
        fillTable1();
        fillUserTable();

       

        selectUser1.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));
        selectUser1.addItem("New User");

        CityChoiceBox.setModel(new DefaultComboBoxModel<>(cities.toArray(new String[0])));

        // add policy tab
        userListV4.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // find policy tab
        userListV5.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // policy info tab
        userChoicev1.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));

        // policy filter tab
        userListV2.setModel(new DefaultComboBoxModel<>(userList.toArray(new String[0])));
        userListV2.addItem("View All");

        idV5.setModel(new DefaultComboBoxModel<>());
        idV5.addItem("Select User ID");

        ComboV4.setModel(new DefaultComboBoxModel<>(carType.values()));

        // set below variables to disabled on edit User tab
        idField.setEnabled(false);
        cityChoieField.setEnabled(false);


        policyListTable.setComponentPopupMenu(tablePopMenu); // sets the popup to only display over the table it is set to
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void reportClearButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportClearButActionPerformed
        // TODO add your handling code here:

        reportGenerating.setText("");
    }//GEN-LAST:event_reportClearButActionPerformed

    private void generate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate2ActionPerformed
        reportGenerating.append(company.companyReport2(company.getTotalPremiumCarModel(), company.getTotalCountPerCarModel()));
    }//GEN-LAST:event_generate2ActionPerformed

    private void generate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate1ActionPerformed
        reportGenerating.append(company.companyReport1(company.getTotalPremiumPerCity()));
        
    }//GEN-LAST:event_generate1ActionPerformed

    private void userListV2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userListV2ActionPerformed

        if(((String)userListV2.getSelectedItem()).equals("View All"))
        {
            setUser(null);
        }
        else
        {
            user = company.getUsers().get(Integer.parseInt((String)userListV2.getSelectedItem()));
        }
        fillTable1();
    }//GEN-LAST:event_userListV2ActionPerformed

    private void sortV2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortV2ActionPerformed

        fillTable1();
    }//GEN-LAST:event_sortV2ActionPerformed

    private void dateButtV2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateButtV2ActionPerformed

        fillTable1();
    }//GEN-LAST:event_dateButtV2ActionPerformed

    private void modelFieldV2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelFieldV2KeyReleased

        fillTable1();
    }//GEN-LAST:event_modelFieldV2KeyReleased

    private void userChoicev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userChoicev1ActionPerformed
        // TODO add your handling code here:

        user = company.getUsers().get(Integer.parseInt((String)userChoicev1.getSelectedItem()));

        fillTable();
    }//GEN-LAST:event_userChoicev1ActionPerformed

    private void updateButtonV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonV1ActionPerformed

        int index = policyListTable.getSelectedRow();
        if (index >=0)
        {
            UpdateUIAdmin updateUI_1 = new UpdateUIAdmin(user.getPolicies(user.getName(), user.getPassword()).get(Integer.parseInt(policyListTable.getValueAt(index, 0).toString())), this);
            updateUI_1.setVisible(true);
        }
    }//GEN-LAST:event_updateButtonV1ActionPerformed

    private void deleteButtonV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonV1ActionPerformed

        int index = policyListTable.getSelectedRow();
        if (index>=0)
        {

            user.getPolicies(user.getName(), user.getPassword()).remove(Integer.parseInt(policyListTable.getValueAt(index, 0).toString()));
            fillTable();
        }
    }//GEN-LAST:event_deleteButtonV1ActionPerformed

    private void policyListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_policyListTableMouseClicked

        if (evt.isPopupTrigger()) // pop up menu on right click
        {
            tablePopMenu.show(this, getX(), getY());
        }
    }//GEN-LAST:event_policyListTableMouseClicked

    private void userListV5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userListV5ActionPerformed
        // TODO add your handling code here:
        user = company.getUsers().get(Integer.parseInt((String)userListV5.getSelectedItem())); // update user variable to perform actions on user
        //populate policy combo based on user selection
        ArrayList<String> policyIdList = user.getPolicies(user.getName(), user.getPassword()).values().stream()
        .map(x -> x.getId()+"")
        .collect(Collectors.toCollection(ArrayList::new));

        idV5.setModel(new DefaultComboBoxModel<>(policyIdList.toArray(new String[0])));
    }//GEN-LAST:event_userListV5ActionPerformed

    private void idV5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_idV5PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_idV5PropertyChange

    private void idV5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idV5ActionPerformed
        // TODO add your handling code here:

        if (user!=null)
        {
            InsurancePolicy policy = company.findPolicy(company.adminUsername, company.getAdminPassword(), user.getUserID(), Integer.parseInt((String) idV5.getSelectedItem()));
            userAreaPolicy.append(policy.toString()+"\n");
        }
    }//GEN-LAST:event_idV5ActionPerformed

    private void ClearTabV5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearTabV5ActionPerformed
        // TODO add your handling code here:
        userAreaPolicy.setText("");
        setUser(null);
        idV5.setModel(new DefaultComboBoxModel<>());
        idV5.addItem("None");
    }//GEN-LAST:event_ClearTabV5ActionPerformed

    private void userListV4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_userListV4PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_userListV4PropertyChange

    private void userListV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userListV4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userListV4ActionPerformed

    private void claimV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claimV4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_claimV4ActionPerformed

    private void AddV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddV4ActionPerformed

        InsurancePolicy policy = null;

        if(user == null)
        {
            JOptionPane.showMessageDialog(this, "Please select a user ID.");
        }
        else
        {
            try
            {
                String holder = HolderV4.getText();
                int id = Integer.parseInt(idV4.getText());
                carType type = (carType) ComboV4.getSelectedItem();
                String model = ModelV4.getText();
                int carYear = Integer.parseInt(YearV4.getText());
                int price = Integer.parseInt(priceV4.getText());
                int claimsNo = Integer.parseInt(claimV4.getText());
                int year = Integer.parseInt(yearV4.getText());
                int month = Integer.parseInt(monthv4.getText());
                int day = Integer.parseInt(dayv4.getText());
                MyDate date = new MyDate(year, month, day);
                Car car = new Car(model, type, carYear, price);
                if (thirdPartyChoiceV4.isSelected())
                {
                    String comments = commentV4.getText();
                    policy = new ThirdPartyPolicy(holder, id, car, claimsNo, date, comments);
                }
                else
                {
                    int age = Integer.parseInt(commentV4.getText());
                    int level = Integer.parseInt(levelTextv4.getText());
                    policy = new ComprehensivePolicy(holder, id, car, claimsNo, date, age, level);
                }
                 if (user.addPolicy(policy))
                {
                    JOptionPane.showMessageDialog(this, "Policy has been added successfully.");
                    clearPolicyForm();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Policy can not be added to user.");
                }
            } catch (NumberFormatException e) {
                throw new RuntimeException(e);
            } catch (HeadlessException e) {
                throw new RuntimeException(e);
            }
        }
    }//GEN-LAST:event_AddV4ActionPerformed

    private void ClearV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearV4ActionPerformed

        clearPolicyForm();
    }//GEN-LAST:event_ClearV4ActionPerformed

    private void ComboV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboV4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboV4ActionPerformed

    private void thirdPartyChoiceV4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdPartyChoiceV4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thirdPartyChoiceV4ActionPerformed

    private void thirdPartyChoiceV4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thirdPartyChoiceV4StateChanged

        if (thirdPartyChoiceV4.isSelected())
        {
            levelLabel.setVisible(false);
            levelTextv4.setVisible(false);
            commentAgeLabel.setText("Comments");
            commentV4.setText("");
        }
        else
        {
            commentAgeLabel.setText("Driver Age");
            levelLabel.setVisible(true);
            levelTextv4.setVisible(true);
            commentV4.setText("");
            levelTextv4.setText("");
        }
    }//GEN-LAST:event_thirdPartyChoiceV4StateChanged

    private void sortPremiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortPremiumActionPerformed
        // TODO add your handling code here:

        fillUserTable();
    }//GEN-LAST:event_sortPremiumActionPerformed

    private void SortNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortNameActionPerformed
        // TODO add your handling code here:

        fillUserTable();
    }//GEN-LAST:event_SortNameActionPerformed

    private void deleteEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteEditActionPerformed

    private void selectUser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_selectUser1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_selectUser1PropertyChange

    private void selectUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectUser1ActionPerformed
        // TODO add your handling code here:

        if(((String)selectUser1.getSelectedItem()).equals("New User"))
        {
            clearUser();
            idField.setEnabled(false);
        }
        else
        {
            idField.setEnabled(false);

            user = company.getUsers().get(Integer.parseInt((String)selectUser1.getSelectedItem()));
            idField.setText(user.getUserID()+""); // implicit conversion by concat empty string
            nameField.setText(user.getName());          
            passwordField.setText(user.getPassword());
            streetNumField.setText(user.getAddress().getStreetNum()+"");
            streetField.setText(user.getAddress().getStreet());
            subField.setText(user.getAddress().getSuburb());

            CityChoiceBox.setSelectedItem(user.getAddress().getCity());
            cityChoieField.setText(user.getAddress().getCity());
        }
    }//GEN-LAST:event_selectUser1ActionPerformed

    private void saveButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonEditActionPerformed

        if(!((String)selectUser1.getSelectedItem()).equals("New User"))
        {
            try
            {
                user.setName(nameField.getText());
                user.setPassword(passwordField.getText());
                user.getAddress().setStreetNum(Integer.parseInt(streetNumField.getText()));
                user.getAddress().setStreet(streetField.getText());
                user.getAddress().setSuburb(subField.getText());
                if (cityOptionCheck.isSelected())
                {
                    user.getAddress().setCity(cityChoieField.getText());
                    if (!cities.contains(cityChoieField.getText())) // eliminate dupicates
                    {
                        cities.add(cityChoieField.getText());
                        CityChoiceBox.setModel(new DefaultComboBoxModel<>(cities.toArray(new String[0])));
                        CityChoiceBox.setSelectedItem(cityChoieField.getText());
                    }
                }
                else
                {
                    user.getAddress().setCity((String)CityChoiceBox.getSelectedItem());
                    cityChoieField.setText(user.getAddress().getCity());
                }
                JOptionPane.showMessageDialog(this, "User Details was Updated.");
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Wrong input number!.");
            }
        }
        else
        {
            try
            {
                int userID =Integer.parseInt(idField.getText());
                String name = nameField.getText();
                String password = passwordField.getText();
                int streetNum = Integer.parseInt(streetNumField.getText());
                String street = streetField.getText();
                String suburb = subField.getText();
                String city;
                if(cityOptionCheck.isSelected())
                {
                    city = cityChoieField.getText();
                }
                else
                {
                    city = (String)CityChoiceBox.getSelectedItem();
                }
                // create user and add to company
                Address newAddress = new Address(streetNum, street, suburb, city);
                User newUser = new User(name, userID, newAddress, password);
                company.addUser(newUser);
                JOptionPane.showMessageDialog(this, "User Added Successfully.");
            }
            catch(NumberFormatException e)
            {
                System.out.println("Invalid Input!\nCheck inputs fields.");
            }
        }
    }//GEN-LAST:event_saveButtonEditActionPerformed

    private void cityOptionCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityOptionCheckActionPerformed

        if (cityOptionCheck.isSelected())
        {
            cityChoieField.setEnabled(true);
            CityChoiceBox.setEnabled(false);
        }
        else
        {
            cityChoieField.setEnabled(false);
            CityChoiceBox.setEnabled(true);
        }
    }//GEN-LAST:event_cityOptionCheckActionPerformed

    private void CityChoiceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityChoiceBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityChoiceBoxActionPerformed

    private void streetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetFieldActionPerformed

    private void streetNumFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNumFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNumFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AdminUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
////                new AdminUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddPolicyTab;
    private javax.swing.JButton AddV4;
    private javax.swing.JComboBox<String> CityChoiceBox;
    private javax.swing.JButton ClearTabV5;
    private javax.swing.JButton ClearV4;
    private javax.swing.JComboBox<carType> ComboV4;
    private javax.swing.JRadioButton CompreV4;
    private javax.swing.JMenuItem Delete;
    private javax.swing.JPanel EditUserTab;
    private javax.swing.JPanel FilterPolicies;
    private javax.swing.JPanel FindPolicyTab;
    private javax.swing.JTextField HolderV4;
    private javax.swing.JTextField ModelV4;
    private javax.swing.JPanel PolicyInfoTab;
    private javax.swing.JCheckBox SortName;
    private javax.swing.JTable TableV2;
    private javax.swing.JMenuItem Update;
    private javax.swing.JPanel UserListTab;
    private javax.swing.JTable UserTable;
    private javax.swing.JTextField YearV4;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField cityChoieField;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JCheckBox cityOptionCheck;
    private javax.swing.JTextField claimV4;
    private javax.swing.JLabel clientLabel;
    private javax.swing.JLabel clientLabel1;
    private javax.swing.JLabel clientLabel4;
    private javax.swing.JLabel clientText;
    private javax.swing.JLabel commentAgeLabel;
    private javax.swing.JTextField commentV4;
    private javax.swing.JButton dateButtV2;
    private javax.swing.JTextField dateFieldV2;
    private javax.swing.JLabel dateFilterLabel;
    private javax.swing.JTextField dayv4;
    private javax.swing.JButton deleteButtonV1;
    private javax.swing.JButton deleteEdit;
    private javax.swing.JLabel expiryLabel;
    private javax.swing.JButton generate1;
    private javax.swing.JButton generate2;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idV4;
    private javax.swing.JComboBox<String> idV5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1V3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelTextv4;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JTextField modelFieldV2;
    private javax.swing.JLabel modelFilterLabel;
    private javax.swing.JTextField monthv4;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTable policyListTable;
    private javax.swing.JTextField priceV4;
    private javax.swing.JLabel reportByCityLabel;
    private javax.swing.JLabel reportByCityLabel1;
    private javax.swing.JButton reportClearBut;
    private javax.swing.JTextArea reportGenerating;
    private javax.swing.JLabel reportLabel1;
    private javax.swing.JButton saveButtonEdit;
    private javax.swing.JComboBox<String> selectUser1;
    private javax.swing.JCheckBox sortPremium;
    private javax.swing.JCheckBox sortV2;
    private javax.swing.JTextField streetField;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JTextField streetNumField;
    private javax.swing.JLabel streetNumLabel;
    private javax.swing.JTextField subField;
    private javax.swing.JLabel suburbLabel;
    private javax.swing.JPopupMenu tablePopMenu;
    private javax.swing.JRadioButton thirdPartyChoiceV4;
    private javax.swing.JButton updateButtonV1;
    private javax.swing.JTextArea userAreaPolicy;
    private javax.swing.JComboBox<String> userChoicev1;
    private javax.swing.JComboBox<String> userListV2;
    private javax.swing.JComboBox<String> userListV4;
    private javax.swing.JComboBox<String> userListV5;
    private javax.swing.JTextField yearV4;
    // End of variables declaration//GEN-END:variables
}
